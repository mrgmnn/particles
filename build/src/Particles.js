var A=Object.defineProperty;var v=(l,t,i)=>t in l?A(l,t,{enumerable:!0,configurable:!0,writable:!0,value:i}):l[t]=i;var C=(l,t,i)=>(v(l,typeof t!="symbol"?t+"":t,i),i);var g=class{constructor(t=0,i=0){this.x=t,this.y=i}static fromVector(t){return new g(t.x,t.y)}static fromArray(t){return new g(t[0],t[1])}set(t,i=t){return this.x=t,this.y=i,this}setToPolar(t,i=1){return this.x=Math.cos(t)*i,this.y=Math.sin(t)*i,this}equals(t){return this.x===t.x&&this.y===t.y}angle(){let t=Math.atan2(this.y,this.x);return t<0&&(t+=2*Math.PI),t}setAngle(t){return this.setToPolar(t,this.length())}add(t){return this.x+=t.x,this.y+=t.y,this}subtract(t){return this.x-=t.x,this.y-=t.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}divide(t){return this.x/=t.x,this.y/=t.y,this}scale(t){return isFinite(t)?(this.x*=t,this.y*=t):(this.x=0,this.y=0),this}negate(){return this.x=-this.x,this.y=-this.y,this}distance(t){let i=t.x-this.x,s=t.y-this.y;return Math.sqrt(i*i+s*s)}distanceSq(t){let i=t.x-this.x,s=t.y-this.y;return i*i+s*s}length(){let t=this.x,i=this.y;return Math.sqrt(t*t+i*i)}setLength(t){return this.normalize().scale(t)}lengthSq(){let t=this.x,i=this.y;return t*t+i*i}normalize(){let t=this.x,i=this.y,s=t*t+i*i;return s>0&&(s=1/Math.sqrt(s),this.x=t*s,this.y=i*s),this}normalizeRightHand(){let t=this.x;return this.x=this.y*-1,this.y=t,this}normalizeLeftHand(){let t=this.x;return this.x=this.y,this.y=t*-1,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lerp(t,i=0){let s=this.x,e=this.y;return this.x=s+i*(t.x-s),this.y=e+i*(t.y-e),this}reset(){return this.x=0,this.y=0,this}limit(t){let i=this.length();return i&&i>t&&this.scale(t/i),this}reflect(t){return t=g.fromVector(t).normalize(),this.subtract(t.scale(2*this.dot(t)))}mirror(t){return this.reflect(t).negate()}rotate(t){let i=Math.cos(t),s=Math.sin(t);return this.set(i*this.x-s*this.y,s*this.x+i*this.y)}toPolar(){return{p:Math.sqrt(this.x*this.x+this.y*this.y),q:Math.atan2(this.y,this.x)}}},n=g;var T=class{constructor(t=0,i=0,s=0){this.position=new n(t,i),this.radius=s}get center(){return this.position}set center(t){this.position=t}get diameter(){return this.radius*2}set diameter(t){this.radius=t*.5}get left(){return this.position.x-this.radius}set left(t){this.position.x=t+this.radius}get right(){return this.position.x+this.radius}set right(t){this.position.x=t-this.radius}get top(){return this.position.y+this.radius}set top(t){this.position.y=t-this.radius}get bottom(){return this.position.y-this.radius}set bottom(t){this.position.y=t+this.radius}intersectsPoint(t){return t.distance(this.position)<=this.radius}},b=T;var k=class{constructor(t=new n,i=new n){this.a=t,this.b=i}length(){return Math.sqrt((this.b.x-this.a.x)*(this.b.x-this.a.x)+(this.b.y-this.a.y)*(this.b.y-this.a.y))}},m=k;var w=class{constructor(){this.position=new n,this.velocity=new n,this.radius=1,this.color="rgba(255,255,255,0.5)",this.text=""}update(){this.position.add(this.velocity)}},M=class{constructor(){this.particles=[]}createParticle(){let t=new w;return this.particles.push(t),t}};var R=class{constructor(t=0,i=0,s=0,e=0){this.position=new n(t,i),this.size=new n(s,e)}get left(){return this.position.x}set left(t){t>=this.right?this.size.x=0:this.size.x=this.right-t,this.position.x=t}get right(){return this.position.x+this.size.x}set right(t){t<=this.position.x?this.size.x=0:this.size.x=t-this.position.x}get top(){return this.position.y}set top(t){t>=this.bottom?this.size.y=0:this.size.y=this.bottom-t,this.position.y=t}get bottom(){return this.position.y+this.size.y}set bottom(t){t<=this.position.y?this.size.y=0:this.size.y=t-this.position.y}get center(){return new n(this.position.x+this.size.x/2,this.position.y+this.size.y/2)}set center({x:t,y:i}){this.x=t-this.size.x/2,this.y=i-this.size.y/2}set(t,i,s,e){this.position.set(t,i),this.size.set(s,e)}contains(t){return t.x>=this.left&&t.x<=this.right&&t.y>=this.top&&t.y<=this.bottom}intersectsCircle(t){return!(t.position.x+t.radius<=this.left&&t.position.x+t.radius>=this.right&&t.position.y+t.radius<=this.top&&t.position.y+t.radius>=this.bottom)}intersectsRectangle(t){return!(Math.abs(this.position.x-t.position.x)>this.size.x/2+t.size.x/2||Math.abs(this.position.y-t.position.y)>this.size.y/2+t.size.y/2)}},p=R;var W=(l,t)=>{let i=l.replace("rgba(","").replace(")").split(",");return i.lebgth===3?`rgba(${i.join(",")},${t})`:(i[i.length-1]=t,`rgba(${i.join(",")})`)},j=class{constructor(t,i="#000",s=new n(300,150)){this.objectToRender=[],this.deltas=[],this.gradient=null,this.ctx=t,this.debug=!1,this.viewportSize=s,this.transparentBackground=!0,this.backgroundColor=i}render(){this.drawBackground(this.ctx,this.viewportSize,this.transparentBackground,this.gradient);let t=this.objectToRender.filter(r=>r instanceof w),i=this.objectToRender.filter(r=>r instanceof m),s=this.objectToRender.filter(r=>r instanceof p),e=this.objectToRender.filter(r=>r instanceof b);this.drawLines(this.ctx,i),this.drawParticles(this.ctx,t),this.drawCircles(this.ctx,e),this.debug&&this.drawPerformanceGraphic(this.ctx,this.deltas)}drawBackground(t,i,s,e,r){s?t.clearRect(0,0,i.x,i.y):e?(t.fillStyle=e,t.fillRect(0,0,i.x,i.y)):(t.fillStyle=this.backgroundColor,t.fillRect(0,0,i.x,i.y))}drawParticles(t,i){for(let s of i)t.fillStyle=s.color,t.beginPath(),t.moveTo(s.position.x,s.position.y),t.arc(s.position.x,s.position.y,s.radius,0,Math.PI*2),t.fill(),t.closePath(),s.text&&(t.font="15px Arial",t.fillText(s.text,s.position.x+s.radius+10,s.position.y+6))}drawLines(t,i){t.lineWidth=1;for(let s of i){let e=t.createLinearGradient(s.a.x,s.a.y,s.b.x,s.b.y);e.addColorStop(0,W(s.colorFrom,s.alpha)),e.addColorStop(1,W(s.colorTo,s.alpha)),t.strokeStyle=e,t.beginPath(),t.moveTo(s.a.x,s.a.y),t.lineTo(s.b.x,s.b.y),t.stroke()}}drawRectangles(t,i){t.lineWidth=.2,t.strokeStyle="rgba(255,255,255,1)",t.beginPath();for(let s of i)t.rect(s.position.x,s.position.y,s.size.x,s.size.y);t.stroke()}drawCircles(t,i){t.lineWidth=.2,t.strokeStyle="rgba(255,255,255,0.5)",t.beginPath();for(let s of i)t.moveTo(s.position.x+s.radius,s.position.y),t.arc(s.position.x,s.position.y,s.radius,0,Math.PI*2);t.stroke()}drawPerformanceGraphic(t,i){var d;let s=(c,u,f)=>(c-u)/(f-u),e=i.filter(c=>Boolean(c)),r=Math.min(...e),h=Math.max(...e);t.lineWidth=1,t.font=`${16}px monospace`,t.strokeStyle="#fff",t.fillStyle="#fff";let a=0,o=70;t.beginPath(),t.moveTo(a,o-i[0]);for(let c of i){let u=o-50*s(c,r,h);t.lineTo(a,u),a+=2}t.moveTo(0,o),t.lineTo(i.length*2,o),t.fillText(r,i.length*2,o+4),t.moveTo(0,o-50),t.lineTo(i.length*2,o-50),t.fillText(h,i.length*2,o-50+4),t.closePath(),t.stroke(),t.fillText(`${this.objectToRender.length.toString()} objects`,0,15),t.fillText(`${(d=i[i.length-1])==null?void 0:d.toString()} ms`,150,15)}},V=j;var y=class{constructor(t,i){this.rectangle=t,this.capacity=i,this.points=[],this.divided=!1,this.northEast=null,this.northWest=null,this.southEast=null,this.southWest=null}subdivide(){let t=this.rectangle.position.x,i=this.rectangle.position.y,s=this.rectangle.size.x,e=this.rectangle.size.y,r=this.capacity;this.northEast=new y(new p(t,i,s/2,e/2),r),this.northWest=new y(new p(t+s/2,i,s/2,e/2),r),this.southEast=new y(new p(t,i+e/2,s/2,e/2),r),this.southWest=new y(new p(t+s/2,i+e/2,s/2,e/2),r),this.divided=!0}insert(t){var i;return this.rectangle.contains(t.position)?this.points.length<this.capacity?(this.points.push(t),!0):(this.divided||this.subdivide(),(i=this.northEast.insert(t)||this.northWest.insert(t)||this.southEast.insert(t)||this.southWest.insert(t))!=null?i:!1):!1}queryCircle(t){let i=[],s=[];s.push(this);for(let e=0;e<s.length;e++){let r=s[e];if(r.rectangle.intersectsCircle(t)){for(let h of r.points)t.intersectsPoint(h.position)&&i.push(h);r.divided&&(s.push(r.northEast),s.push(r.northWest),s.push(r.southEast),s.push(r.southWest))}}return i}getAllRectangles(){let t=[];t.push(this);for(let i=0;i<t.length;i++){let s=t[i];s.divided&&(t.push(s.northEast),t.push(s.northWest),t.push(s.southEast),t.push(s.southWest))}return t.map(i=>i.rectangle)}clear(){this.points=[],this.divided=!1,this.northEast=null,this.northWest=null,this.southEast=null,this.southWest=null}},B=y;var P=class{static intBetween(t,i){return i||(i=t,t=0),Math.floor(Math.random()*(i-t)+t)}static floatBetween(t,i){return i||(i=t,t=0),Math.random()*(i-t)+t}static fromArray(t){return t[Math.floor(Math.random()*t.length)]}static indexFromArray(t){return Math.floor(Math.random()*t.length)}},x=P;var z=class{constructor(t=new n(1,1),i=new p(0,0,100,100)){this.rectangles=[],this.size=t,this.boundRectangle=i,this.rectWidth=i.size.x/t.x,this.rectHeight=i.size.y/t.y,this.initReactangles(t,i)}initReactangles(t){for(let i=0;i<t.x;i++)for(let s=0;s<t.y;s++){let e=i*this.rectWidth+this.boundRectangle.position.x,r=s*this.rectHeight+this.boundRectangle.position.y;this.rectangles.push(new G(e,r,this.rectWidth,this.rectHeight))}}insert(t){let i=Math.floor(t.position.x/this.rectWidth),s=Math.floor(t.position.y/this.rectHeight),e=i*s,r=this.rectangles[e];r&&r.particles.push(t)}getIntersectedRectangles(t){let i=Math.floor(t.left/this.rectWidth),s=Math.ceil(t.right/this.rectWidth),e=Math.floor(t.bottom/this.rectHeight),r=Math.ceil(t.top/this.rectHeight),h=new G(i*this.rectWidth,r*this.rectHeight,(s-i)*this.rectWidth,(e-r)*this.rectHeight);for(let a=i;a<s;a++)for(let o=e;o<r;o++){let d=this.rectangles[a*o];d&&(h.particles=[...h.particles,...d.particles])}return h}queryCircle(t){let i=[],s=this.getIntersectedRectangles(t);if(!s)return i;for(let e of s.particles)t.intersectsPoint(e.position)&&i.push(e);return i}clear(){for(let t of this.rectangles)t.particles=[]}},S=z,G=class extends p{constructor(t,i,s,e,r=[]){super(t,i,s,e);this.particles=r}};var q=class{constructor(t,i={}){C(this,"oneFrame",this.update);this.canvas=t,this.ctx=this.canvas.getContext("2d"),this.particleManager=null,this.renderer=null,this.boundUpdate=this.update.bind(this),this.isRunning=!1,this.ticks=0,this.deltas=new Array(150),this.debug=!1,this.boundary=null,this.spatialGrid=null,this.settings=null,this.method="grid",this.drawGrid=!1}init(t){var i,s;this.settings=t,this.particleManager=new M;for(let e=0;e<t.particles.amount;e++){let r=this.particleManager.createParticle();r.position.set(x.intBetween(-t.particles.distanceToLink,t.renderer.width+t.particles.distanceToLink),x.intBetween(-t.particles.distanceToLink,t.renderer.height+t.particles.distanceToLink));let h=new n;h.set(x.floatBetween(-t.particles.maxVelocity,t.particles.maxVelocity),x.floatBetween(-t.particles.maxVelocity,t.particles.maxVelocity)),r.velocity=h,r.color=((s=(i=this.settings)==null?void 0:i.particles)==null?void 0:s.color)||"rgba(255,255,255,0.5)",r.text="test",r.radius=x.floatBetween(1,t.particles.maxRadius)}if(this.renderer=new V(this.ctx,t.renderer.backgroundColor,new n),this.renderer.transparentBackground=t.renderer.transparentBackground,this.setSize(t.renderer.width,t.renderer.height),this.changeSpatialGridTo(this.method,this.drawGrid),t.renderer.linearGradient){let e=this.ctx.createLinearGradient(t.renderer.width*t.renderer.linearGradient.x1,t.renderer.height*t.renderer.linearGradient.y1,t.renderer.width*t.renderer.linearGradient.x2,t.renderer.height*t.renderer.linearGradient.y2);e.addColorStop(0,t.renderer.linearGradient.color1),e.addColorStop(1,t.renderer.linearGradient.color2),this.renderer.gradient=e}return this.renderer.debug=t.debug,this}start(){return this.isRunning=!0,window.requestAnimationFrame(this.boundUpdate),console.info("Spark Particles started!"),this}stop(){return this.isRunning=!1,this}update(){let t=Date.now(),i=this.particleManager.particles,s=this.settings.particles.distanceToLink;switch(this.method){case"quadTree":case"grid":this.spatialGrid.clear();break;default:break}for(let o of i)switch(o.update(),this.checkBoundary(o,this.boundary),this.method){case"quadTree":case"grid":this.spatialGrid.insert(o);break;default:break}let e=[];this.settings.particles.linkedParticles&&(e=this.linkParticles(i,s));let r=this.spatialGrid?[...i,...e,...this.spatialGrid.rectangles]:[...i,...e];this.renderer.objectToRender=r,this.renderer.deltas=this.deltas,this.renderer.render(),this.isRunning&&window.requestAnimationFrame(this.boundUpdate),this.ticks++;let a=Date.now()-t;return this.deltas.push(a),this.deltas.shift(),this}linkParticles(t,i){let s=[];switch(this.method){case"quadTree":{let e=[];for(let r of t){let h=new b(r.position.x,r.position.y,i),a=this.spatialGrid.queryCircle(h);e.push(r);for(let o of a){if(e.find(f=>f===o))continue;let d=r.position.distance(o.position),c=new m(n.fromVector(r.position),n.fromVector(o.position)),u=1-d/i;c.alpha=u,s.push(c)}}break}case"grid":{for(let r of t){let h=r.position,a=r.color,o=new b(r.position.x,r.position.y,i),d=this.spatialGrid.queryCircle(o).map(c=>({...c.position,color:c.color}));for(let c of d){if(h===c)continue;let u=h.distance(c),f=new m(n.fromVector(h),n.fromVector(c)),L=1-u/i;f.alpha=L,f.colorFrom=a,f.colorTo=c.color,s.push(f)}}let e=[];for(let r=0;r<s.length-1;r++){let h=s[r],a=!0;for(let o=r+1;o<s.length;o++){let d=s[o];h.a.equals(d.b)&&h.b.equals(d.a)&&(a=!1)}a&&e.push(h)}s.length&&e.push(s[s.length-1]),s=e;break}default:{for(let e=0;e<t.length-1;e++)for(let r=e+1;r<t.length;r++){let h=t[e].position.distance(t[r].position);if(h<i){let a=new m(n.fromVector(t[e].position),n.fromVector(t[r].position)),o=1-h/i;a.alpha=o,s.push(a)}}break}}return s}setSize(t,i){return this.canvas.style.width=t.toString()+"px",this.canvas.style.height=i.toString()+"px",this.canvas.width=t,this.canvas.height=i,this.renderer.viewportSize=new n(t,i),this.boundary=new p(-this.settings.particles.distanceToLink,-this.settings.particles.distanceToLink,t+this.settings.particles.distanceToLink*2,i+this.settings.particles.distanceToLink*2),this}checkBoundary(t,i){if(t.position.x<i.left){t.position.x=i.right;return}if(t.position.x>i.right){t.position.x=i.left;return}if(t.position.y<i.top){t.position.y=i.bottom;return}t.position.y>i.bottom&&(t.position.y=i.top)}changeSpatialGridTo(t){switch(this.method=t,t){case"grid":{let i=Math.floor(this.boundary.size.x/this.settings.particles.distanceToLink/2.5),s=Math.floor(this.boundary.size.y/this.settings.particles.distanceToLink/2.5);this.spatialGrid=new S(new n(i,s),this.boundary);break}case"quadTree":{this.quadTree=new B(this.boundary,4);break}default:this.spatialGrid=null}}},E=q;export{x as Random,n as Vector2,E as default};
//# sourceMappingURL=Particles.js.map
